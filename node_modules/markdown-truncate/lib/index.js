const ASTERISK_ITALIC="*",UNDERSCORE_ITALIC="_",ASTERISK_BOLD="**",UNDERSCORE_BOLD="__",ASTERISK_PLACEHOLDER_REGEXP=/ASTERISKPLACEHOLDER/gm,UNDERSCORE_PLACEHOLDER_REGEXP=/UNDERSCOREPLACEHOLDER/gm,UNDERSCORE_BOLD_PLACEHOLDER_REGEXP=/UNDERSCOREBOLDPLACEHOLDER/gm,UNDERSCORE_BOLD_REGEXP=/__(.*)__/gim,ASTERISK_BOLD_PLACEHOLDER_REGEXP=/ASTERISKBOLDPLACEHOLDER/gm,ASTERISK_BOLD_REGEXP=/\*\*(.*)\*\*/gim,UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP=/UNDERSCOREITALICPLACEHOLDER/gm,UNDERSCORE_ITALIC_REGEXP=/_(.*)_/gim,ASTERISK_ITALIC_PLACEHOLDER_REGEXP=/ASTERISKITALICPLACEHOLDER/gm,ASTERISK_ITALIC_REGEXP=/\*(.*)\*/gim,HYPERLINK=/^\[([^[]+)\]\(([^)]+)\)/,replaceFormatMarkersWithPlaceholders=e=>e.replace(UNDERSCORE_BOLD_REGEXP,`${UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source}$1${UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source}`).replace(ASTERISK_BOLD_REGEXP,`${ASTERISK_BOLD_PLACEHOLDER_REGEXP.source}$1${ASTERISK_BOLD_PLACEHOLDER_REGEXP.source}`).replace(UNDERSCORE_ITALIC_REGEXP,`${UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source}$1${UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source}`).replace(ASTERISK_ITALIC_REGEXP,`${ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source}$1${ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source}`),replaceFormatPlaceholdersWithMarkers=e=>e.replace(UNDERSCORE_BOLD_PLACEHOLDER_REGEXP,UNDERSCORE_BOLD).replace(ASTERISK_BOLD_PLACEHOLDER_REGEXP,ASTERISK_BOLD).replace(UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP,UNDERSCORE_ITALIC).replace(ASTERISK_ITALIC_PLACEHOLDER_REGEXP,ASTERISK_ITALIC),formatMarkers=[ASTERISK_BOLD_PLACEHOLDER_REGEXP.source,UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source,ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source,UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source],formatMarkerAhead=(e,t)=>{for(let E=0,c=formatMarkers.length;E<c;E++)if(e.startsWith(formatMarkers[E]))return t[t.length-1]===formatMarkers[E]?t.pop():t.push(formatMarkers[E]),formatMarkers[E];return null},truncate=(e,t,E)=>{let c=0;const r=R=>{let u=[],l=!1,n="",s=0;for(;c<t&&s<R.length;){const L=formatMarkerAhead(R.substring(s),u);L&&(n+=L,s+=L.length,l=!0);const i=new RegExp(HYPERLINK),o=i.exec(R.substring(s));if(o){const A=o[1],C=o[2];n+=`[${r(A)}](${C})`,s+=o[0].length,l=!0}!L&&!o&&(n+=R[s],s++),l||c++,l=!1}for(n=n.trimEnd();u.length>0;)n+=u.pop();return n};let _=r(e);return E&&_.length<e.length&&(_+="..."),_};module.exports=function(e="",t={}){const{limit:E,ellipsis:c}=t||{};if(isNaN(parseInt(E,10))||e.length<=E)return e;let r=replaceFormatMarkersWithPlaceholders(e);return r=truncate(r,E,c),r=replaceFormatPlaceholdersWithMarkers(r),r};
